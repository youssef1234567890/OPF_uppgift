@page "/profile"
@using BlazorApp.Data
@using BlazorApp.Data.Models
@using BlazorApp.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@attribute [Authorize]
@inject UserManager<ApplicationUser> UserManager
@inject IUserProfileService UserProfileService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILogger<UserProfile> Logger

<PageTitle>User Profile</PageTitle>

<div class="container-fluid py-4">
    @if (profile == null)
    {
        <div class="d-flex justify-content-center align-items-center" style="min-height: 400px;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row g-4">
            <!-- Profile Header -->
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center bg-light rounded p-4 shadow-sm">
                    <div>
                        <h2 class="mb-0">Profile Settings</h2>
                        <p class="text-muted mb-0">Manage your account preferences and settings</p>
                    </div>
                    @if (message != null)
                    {
                        <div class="alert @(isError ? "alert-danger" : "alert-success") mb-0 px-4 py-2">
                            @message
                        </div>
                    }
                </div>
            </div>

            <!-- Profile Sidebar -->
            <div class="col-12 col-md-3">
                <div class="d-flex flex-column gap-4">
                    <!-- User Info Card -->
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <div class="d-flex flex-column gap-2">
                                <div class="d-flex align-items-center gap-3">
                                    <div class="bg-primary rounded-circle p-3 text-white">
                                        @((profile.Settings?.DisplayName.FirstOrDefault() ?? 'U').ToString().ToUpper())
                                    </div>
                                    <div>
                                        <h5 class="card-title mb-0">@profile.Email</h5>
                                        <span class="badge bg-primary">@profile.Role</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Permissions Card -->
                    <div class="card shadow-sm">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">Permissions</h6>
                        </div>
                        <div class="card-body">
                            <div class="d-flex flex-column gap-2">
                                @foreach (var permission in profile.Permissions)
                                {
                                    <div class="d-flex align-items-center gap-2">
                                        <i class="bi bi-check-circle-fill text-success"></i>
                                        <small class="text-muted">@permission</small>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Settings Content -->
            <div class="col-12 col-md-9">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <EditForm Model="profile.Settings" OnValidSubmit="SaveSettings" class="d-flex flex-column gap-4">
                            <DataAnnotationsValidator />

                            <!-- General Settings Section -->
                            <div>
                                <h4 class="card-title">General Settings</h4>
                                <hr />
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <InputText id="displayName" @bind-Value="profile.Settings.DisplayName" class="form-control" placeholder="Display Name" />
                                            <label for="displayName">Display Name</label>
                                            <ValidationMessage For="@(() => profile.Settings.DisplayName)" class="text-danger" />
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <InputSelect id="theme" @bind-Value="profile.Settings.Theme" class="form-select">
                                                <option value="light">Light</option>
                                                <option value="dark">Dark</option>
                                                <option value="system">System</option>
                                            </InputSelect>
                                            <label for="theme">Theme</label>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <InputSelect id="language" @bind-Value="profile.Settings.Language" class="form-select">
                                                <option value="en">English</option>
                                                <option value="es">Spanish</option>
                                                <option value="fr">French</option>
                                            </InputSelect>
                                            <label for="language">Language</label>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <div class="form-check form-switch">
                                            <InputCheckbox id="notifications" @bind-Value="profile.Settings.ReceiveNotifications" class="form-check-input" />
                                            <label class="form-check-label" for="notifications">
                                                Receive Notifications
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (IsAdminOrHigher)
                            {
                                <!-- Admin Settings Section -->
                                <div>
                                    <h4 class="card-title mt-4">Administrative Settings</h4>
                                    <hr />
                                    <div class="row g-3">
                                        @if (profile.Role == "MainAdmin")
                                        {
                                            <div class="col-12">
                                                <div class="form-check form-switch">
                                                    <InputCheckbox id="canAssignRoles" @bind-Value="CanAssignRolesValue" class="form-check-input" />
                                                    <label class="form-check-label" for="canAssignRoles">
                                                        Can Assign Roles
                                                    </label>
                                                </div>
                                            </div>
                                        }

                                        <div class="col-12">
                                            <div class="form-check form-switch">
                                                <InputCheckbox id="canManageUsers" @bind-Value="CanManageUsersValue" class="form-check-input" />
                                                <label class="form-check-label" for="canManageUsers">
                                                    Can Manage Users
                                                </label>
                                            </div>
                                        </div>

                                        <div class="col-12">
                                            <div class="form-check form-switch">
                                                <InputCheckbox id="adminNotifications" @bind-Value="ReceiveAdminNotificationsValue" class="form-check-input" />
                                                <label class="form-check-label" for="adminNotifications">
                                                    Receive Admin Notifications
                                                </label>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-floating">
                                                <InputSelect id="dashboardLayout" @bind-Value="profile.Settings.DashboardLayout" class="form-select">
                                                    <option value="simple">Simple</option>
                                                    <option value="advanced">Advanced</option>
                                                    <option value="custom">Custom</option>
                                                </InputSelect>
                                                <label for="dashboardLayout">Dashboard Layout</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <!-- User Settings Section -->
                                <div>
                                    <h4 class="card-title mt-4">User Settings</h4>
                                    <hr />
                                    <div class="row g-3">
                                        <div class="col-12">
                                            <div class="form-check form-switch">
                                                <InputCheckbox id="showProfile" @bind-Value="ShowProfilePubliclyValue" class="form-check-input" />
                                                <label class="form-check-label" for="showProfile">
                                                    Show Profile Publicly
                                                </label>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-floating">
                                                <InputSelect id="timezone" @bind-Value="profile.Settings.TimeZone" class="form-select">
                                                    <option value="UTC">UTC</option>
                                                    <option value="EST">Eastern Time</option>
                                                    <option value="CST">Central Time</option>
                                                    <option value="PST">Pacific Time</option>
                                                </InputSelect>
                                                <label for="timezone">Time Zone</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <!-- Save Button -->
                            <div class="d-flex justify-content-end mt-4">
                                <button type="submit" class="btn btn-primary px-4">
                                    <i class="bi bi-save me-2"></i> Save Changes
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private UserProfileDto? profile;
    private string? message;
    private bool isError;
    private bool IsAdminOrHigher => profile?.Role == "MainAdmin" || profile?.Role == "Admin";

    // Properties for handling nullable boolean bindings
    private bool CanAssignRolesValue
    {
        get => profile?.Settings?.CanAssignRoles ?? false;
        set
        {
            if (profile?.Settings != null)
                profile.Settings.CanAssignRoles = value;
        }
    }

    private bool CanManageUsersValue
    {
        get => profile?.Settings?.CanManageUsers ?? false;
        set
        {
            if (profile?.Settings != null)
                profile.Settings.CanManageUsers = value;
        }
    }

    private bool ReceiveAdminNotificationsValue
    {
        get => profile?.Settings?.ReceiveAdminNotifications ?? false;
        set
        {
            if (profile?.Settings != null)
                profile.Settings.ReceiveAdminNotifications = value;
        }
    }

    private bool ShowProfilePubliclyValue
    {
        get => profile?.Settings?.ShowProfilePublicly ?? false;
        set
        {
            if (profile?.Settings != null)
                profile.Settings.ShowProfilePublicly = value;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated ?? false)
            {
                var userId = UserManager.GetUserId(user);
                if (userId != null)
                {
                    profile = await UserProfileService.GetUserProfileAsync(userId);
                }
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading user profile");
            message = "Error loading profile";
            isError = true;
        }
    }

    private async Task SaveSettings()
    {
        try
        {
            if (profile == null) return;

            var request = new UpdateUserProfileRequest
            {
                UserId = profile.Id,
                Settings = profile.Settings
            };

            var result = await UserProfileService.UpdateUserProfileAsync(request);
            if (result)
            {
                message = "Settings saved successfully";
                isError = false;
            }
            else
            {
                message = "Error saving settings";
                isError = true;
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error saving user settings");
            message = "Error saving settings";
            isError = true;
        }
    }
} 